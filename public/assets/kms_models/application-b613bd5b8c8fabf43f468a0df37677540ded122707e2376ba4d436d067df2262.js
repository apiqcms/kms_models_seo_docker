(function(){"use strict";angular.module("KMS").config(["$stateProvider","$urlRouterProvider",function(e){return e.state("models",{url:"/kms/models",views:{header:{template:"Models"},"@":{controller:"ModelsController",controllerAs:"models",templateUrl:"models/index.html"}}}).state("models.new",{url:"/new",views:{"header@":{template:"New Model"},"@":{controller:"ModelsController",controllerAs:"models",templateUrl:"models/new.html"}}}).state("models.edit",{url:"/:id/edit",views:{"header@":{template:"Edit Model"},"@":{controller:"ModelsController",controllerAs:"models",templateUrl:"models/edit.html"}}}).state("models.entries",{url:"/:modelId/entries",views:{"header@":{template:"Entries"},"@":{controller:"EntriesController",controllerAs:"entries",templateUrl:"entries/index.html"}}}).state("models.entries.new",{url:"/new",views:{"header@":{template:"New Entry"},"@":{controller:"EntriesController",controllerAs:"entries",templateUrl:"entries/new.html"}}}).state("models.entries.edit",{url:"/:id/edit",views:{"header@":{template:"Edit Entry"},"@":{controller:"EntriesController",controllerAs:"entries",templateUrl:"entries/edit.html"}}})}])}).call(this),angular.module("templates").run(["$templateCache",function(e){e.put("entries/edit.html",'<div class="row"><div class="col-lg-12"><form ng-submit="update()" novalidate="" role="form"><ng-include src="&#39;entries/form.html&#39;"></ng-include><div class="form-group"><label for="slug">Slug</label><input class="form-control" id="entry[slug]" ng-model="entry.slug" type="text" /></div><button class="btn btn-default" type="submit">Update Entry</button></form></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("entries/form.html",'<div class="form-group" ng-repeat="field in model.fields_attributes"><ng-include src="&#39;fields/&#39; + getFieldTemplateName(field) + &#39;.html&#39;"></ng-include></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("entries/index.html",'<div class="row" ng-show="entries.length"><div class="col-lg-12"><div class="widget"><div class="widget-header"><i class="fa fa-list"></i>Entries<a class="btn btn-sm btn-primary pull-right" ui-sref="models.entries.new({modelId: model.id})">Add Entry</a></div><div class="widget-body no-padding"><div class="table-responsive"><table class="table"><tbody as-sortable="entriesSortableOptions" ng-model="entries"><tr as-sortable-item="" ng-repeat="entry in entries"><td style="width: 80%"><i as-sortable-item-handle="" class="fa fa-bars">&nbsp;</i><a ui-sref="models.entries.edit({modelId: model.id, id: entry.id})">{{ entry.values[model.label_field] || entry.id }}</a></td><td><div class="btn-group pull-right"><a class="btn btn-sm btn-danger" ng-click="destroy(entry)"><i class="fa fa-times"></i></a></div></td></tr></tbody></table></div></div></div></div></div><div class="row" ng-show="!entries.length"><div class="center-block"><div class="jumbotron vertical-center text-center"><div class="container"><h1><span class="fa-stack fa-lg"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-list fa-stack-1x"></i></span></h1><p>Here you would create content for corresponding Model</p><p><a class="btn btn-primary btn-lg" role="button" ui-sref="models.entries.new({modelId: model.id})">Create first entry</a></p></div></div></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("entries/new.html",'<div class="row"><div class="col-lg-12"><form ng-submit="create()" novalidate="" role="form"><ng-include src="&#39;entries/form.html&#39;"></ng-include><button class="btn btn-default" type="submit">Add Entry</button></form></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/belongs_to_field.html",'<label for="{{ field.liquor_name }}">{{ field.name }}</label><ui-select ng-model="entry.values[field.liquor_name]" theme="bootstrap"><ui-select-match placeholder="Select related object...">{{ $select.selected.values[$select.selected.model.label_field] || $select.selected.id }}</ui-select-match><ui-select-choices repeat="relatedEntry.id as relatedEntry in {{ field.liquor_name }}"><div ng-bind-html="relatedEntry.values[relatedEntry.model.label_field] | highlight: $select.search"></div></ui-select-choices></ui-select>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/checkbox_field.html",'<div class="checkbox"><label><input ng-attr-id="{{field.liquor_name}}" ng-model="entry.values[field.liquor_name]" type="checkbox" />{{ field.name }}</label></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/file_field.html",'<label for="{{ field.liquor_name }}">{{ field.name }}</label><div flow-file-added="!!{png:1,gif:1,jpg:1,jpeg:1,doc:1,xls:1,xlsx:1,pdf:1,docx:1,mp4:1,webm:1}[$file.getExtension()]" flow-file-success="$file.msg = $message" flow-files-submitted="entry.values.{{field.liquor_name}} = $flow.files[0].file" flow-init="{singleFile: true, headers: setHeaders, fileParameterName: &#39;entry.values[{{field.liquor_name}}]&#39;}"><input flow-btn="" ng-model="entry.values[field.liquor_name]" type="file" /><div class="thumbnail" ng-show="!$flow.files.length"><img ng-src="{{entry.values[field.liquor_name].url}}" /></div><div class="thumbnail" ng-show="$flow.files.length"><img flow-img="$flow.files[0]" /></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/has_many_field.html",'<label for="{{ field.liquor_name }}">{{ field.name }}</label><ui-select multiple="" ng-model="entry.values[field.liquor_name]" on-remove="removeObject($item, field)" on-select="addObject($item, field)" theme="bootstrap"><ui-select-match class="ui-select-match" placeholder="Select related objects...">{{ $item.values[$item.model.label_field] || $item.id }}</ui-select-match><ui-select-choices repeat="childEntry.id as childEntry in {{ field.liquor_name }}"><div ng-bind-html="childEntry.values[childEntry.model.label_field] | highlight: $select.search"></div></ui-select-choices></ui-select>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/string_field.html",'<label for="{{ field.liquor_name }}">{{ field.name }}</label><input class="form-control" ng-attr-id="{{field.liquor_name}}" ng-model="entry.values[field.liquor_name]" type="text" />')}]),angular.module("templates").run(["$templateCache",function(e){e.put("fields/text_field.html",'<label for="{{ field.liquor_name }}">{{ field.name }}</label><textarea ckeditor="editorOptions" class="form-control" ng-attr-id="{{field.liquor_name}}" ng-model="entry.values[field.liquor_name]" rows="15"></textarea>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("help/models_endpoints.html",'<h4>Endpoints</h4><p><ul><li><var>POST /entries/:collection_name</var><p><span>This endpoint allows you to setup form submitting Model&#39;s elements. For example, if you have a model with collection name &quot;posts&quot; (and field with &quot;title&quot; Liquor name), you could create a form with action=&quot;/entries/posts&quot; and an input with name=&quot;entry[title]&quot;</span></p><p><code ng-non-bindable="">&lt;form action="/entries/:collection_name" method="post"&gt;<br />  &lt;input type="hidden" name=\'authenticity_token\' value=\'{{ request.form_authenticity_token }}\'&gt;<br />  &lt;input type="text" name="entry[name]"&gt;<br />  &lt;input type="submit" value="Send"&gt;<br />&lt;/form&gt;</code></p><p><table class="table"><tr><th>Parameter for /entries/:collection_name</th><th>Description</th></tr><tr><td>entry[:field_liquor_name]</td><td>Value of each parameter will be saved to corresponding Model&#39;s entry field</td></tr></table></p></li></ul></p>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("help/models_variables.html","<h4>Variables</h4><p><ul><li><var>models</var><p><span>Variable &quot;models&quot; gives access to models collections of entries. You can access collection using model collection name - &quot;Collection name (for Liquor)&quot; field. For example, if you created some Model with &quot;services&quot; collection name, then you could iterate its collection using &quot;for&quot; tag like this:</span></p><p><code>{% for service in: models.services do: %}</code></p></li></ul></p>")}]),angular.module("templates").run(["$templateCache",function(e){e.put("models/edit.html",'<div class="row"><div class="col-lg-12"><form ng-submit="update()" novalidate="" role="form"><ng-include src="&#39;models/form.html&#39;"></ng-include><ng-include src="&#39;models/fields.html&#39;"></ng-include><button class="btn btn-default" type="submit">Update Model</button></form></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("models/fields.html",'<div class="form-group" ng-controller="FieldsController"><table class="table"><thead><tr><th colspan="4">Fields</th></tr></thead><tbody as-sortable="fieldsSortableOptions" ng-model="model.fields_attributes"><tr as-sortable-item="" ng-hide="field._destroy" ng-repeat="field in model.fields_attributes"><td><i as-sortable-item-handle="" class="fa fa-bars">&nbsp;</i>{{ field.name }}</td><td>{{ field.liquor_name }}</td><td>{{ formatType(field) }}</td><td>{{ field.required }}</td><td><div class="btn-group pull-right"><a class="btn btn-sm btn-danger" ng-click="removeField(field)"><i class="fa fa-times"></i></a></div></td></tr><tr ng-hide="model.fields_attributes.length &gt; 0"><td><i>No fields yet. Add first field using form below.</i></td></tr></tbody></table><div class="row"><div class="col-lg-3"><input class="form-control" ng-model="field.name" placeholder="Name" required="" type="text" /></div><div class="col-lg-3"><input class="form-control" ng-model="field.liquor_name" placeholder="Name for Liquor" required="" type="text" /></div><div class="col-lg-2"><select class="form-control" id="field_type" ng-model="field.type" ng-options="type.id as type.name for type in types" placeholder="Type" required=""><option disabled="" selected="" value="">Select field type</option></select></div><div class="col-lg-2" ng-show="isAssociationField(field)"><select class="form-control" id="field_class_name" ng-model="field.class_name" ng-options="templatable_type.type as templatable_type.title for templatable_type in templatable_types" placeholder="Class name" required=""><option disabled="" selected="" value="">Select Model</option></select></div><div class="col-lg-2"><a class="btn btn-small btn-primary" ng-click="addField()"><i class="fa fa-plus"></i></a></div></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("models/form.html",'<div class="form-group"><label for="kms_model_name">Name</label><input class="form-control" id="kms_model_name" ng-model="model.kms_model_name" type="text" /></div><div class="form-group"><label for="collection_name">Collection name (for Liquor)</label><input class="form-control" id="collection_name" ng-model="model.collection_name" type="text" /><small class="help-block">You can access model collection like this: models.your_collection_name (ex., models.services)</small></div><div class="form-group"><label for="label_field">Label field (used for URL/slug generating)</label><select class="form-control" id="label_field" ng-model="model.label_field" ng-options="field.liquor_name as field.name for field in model.fields_attributes"></select></div><div class="form-group"><label for="allow_creation_using_form" style="margin-right:10px;">Allow creation using form</label><toggle-switch ng-model="model.allow_creation_using_form" off-label="No" on-label="Yes"></toggle-switch><small class="help-block">On website you can place a form allowing to create model entries</small></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("models/index.html",'<div class="row" ng-show="models.length"><div class="col-lg-12"><div class="widget"><div class="widget-header"><i class="fa fa-tasks"></i>Models<a class="btn btn-sm btn-primary pull-right" ui-sref="models.new">Add Model</a></div><div class="widget-body no-padding"><div class="table-responsive"><table class="table"><tbody><tr ng-repeat="model in models"><td style="width: 80%"><a ui-sref="models.edit({id: model.id})">{{ model.kms_model_name }}</a></td><td><div class="btn-group pull-right"><a class="btn btn-sm btn-danger" ng-click="destroy(model)" ng-show="currentUser.admin"><i class="fa fa-times"></i></a></div></td></tr></tbody></table></div></div></div></div></div><div class="row" ng-show="!models.length"><div class="center-block"><div class="jumbotron vertical-center text-center"><div class="container"><h1><span class="fa-stack fa-lg"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-tasks fa-stack-1x"></i></span></h1><p>Models are where you organize your content (basically dynamic) like &#39;News&#39;, &#39;Blog&#39;, &#39;Services&#39; and etc.</p><p><a class="btn btn-primary btn-lg" role="button" ui-sref="models.new">Create first model</a></p></div></div></div></div>')}]),angular.module("templates").run(["$templateCache",function(e){e.put("models/new.html",'<div class="row"><div class="col-lg-12"><form ng-submit="create()" novalidate="" role="form"><ng-include src="&#39;models/form.html&#39;"></ng-include><ng-include src="&#39;models/fields.html&#39;"></ng-include><button class="btn btn-default" type="submit">Add Model</button></form></div></div>')}]),function(){var e;e=function(e,t,l,n,i,r){return e.modelStore=l.all("models"),e.store=l.one("models",n.modelId).all("entries"),e.editorOptions={filebrowserUploadUrl:"/kms/assets/ckeditor"},e.entriesSortableOptions={orderChanged:function(t){var n,i,r,o,a,s,d;for(s=t.dest.sortableScope.modelValue,d=[],o=r=0,a=s.length;r<a;o=++r)n=s[o],i={id:n.id,position:o},d.push(l.restangularizeElement(e.model,i,"entries").put());return d}},e.modelStore.get(n.modelId).then(function(t){var n;return e.model=t,n=e.getAssociationFields(t),_.each(n,function(t){return e[t.liquor_name]=[],l.one("models",t.class_name).all("entries").getList().then(function(l){return e[t.liquor_name]=l,e.initAssociationField(t)})})}),e.initAssociationField=function(t){var l;return"Kms::HasManyField"===t.type?(l=_.map(e.entry.values[t.liquor_name],function(l){return _.find(e[t.liquor_name],{id:parseInt(l)})}),e.entry.values[t.liquor_name]=_.compact(l)):e.entry.values[t.liquor_name]=_.find(e[t.liquor_name],function(l){return e.entry.values[t.liquor_name]===l.id.toString()})},e.store.getList().then(function(t){return e.entries=t}),n.id?e.store.get(n.id).then(function(t){return e.entry=t}):e.entry={values:{}},e.getAssociationFields=function(e){return _.filter(e.fields_attributes,function(e){return"Kms::HasManyField"===e.type||"Kms::BelongsToField"===e.type})},e.getFieldTemplateName=function(e){var t;return t=e.type.split("::"),_.snakeCase(t[t.length-1])},e.create=function(){var l,n,o,a;l=new FormData,e.entry.slug&&l.append("entry[slug]",e.entry.slug),o=e.entry.values;for(n in o)a=o[n],l.append("entry[values]["+n+"]",a||"");return e.store.withHttpConfig({transformRequest:angular.identity}).post(l,null,{"Content-Type":void 0}).then(function(){return t.go("models.entries",{modelId:e.model.id})},function(e){return i.error(r.prepareErrorsString(e.data.errors))})},e.update=function(){var l,n,o,a,s,d,m,c;n=new FormData,e.entry.slug&&n.append("entry[slug]",e.entry.slug),m=e.entry.values;for(s in m)if(c=m[s],_.isEmpty(c))n.append("entry[values]["+s+"]",null!=c?c:"");else if("Array"===c.constructor.name)for(o=0,d=c.length;o<d;o++)l=c[o],a="Object"===l.constructor.name?l.id:l,n.append("entry[values]["+s+"][]",a);else"Object"!==c.constructor.name&&n.append("entry[values]["+s+"]",c||"");return e.entry.withHttpConfig({transformRequest:angular.identity}).post("",n,"",{"Content-Type":void 0}).then(function(){return t.go("models.entries",{modelId:e.model.id})},function(e){return i.error(r.prepareErrorsString(e.data.errors))})},e.destroy=function(t){if(confirm("Are you sure?"))return t.remove().then(function(){return e.entries=_.without(e.entries,t)})}},angular.module("KMS").controller("EntriesController",["$scope","$state","Restangular","$stateParams","Alertify","ErrorsService",e])}.call(this),function(){var e;e=function(e,t,l,n,i){return e.types=[{id:"Kms::StringField",name:"String"},{id:"Kms::TextField",name:"Text"},{id:"Kms::CheckboxField",name:"Checkbox"},{id:"Kms::FileField",name:"File"},{id:"Kms::HasManyField",name:"Has many"},{id:"Kms::BelongsToField",name:"Belongs to"}],e.fieldsSortableOptions={orderChanged:function(t){var n,i,r,o,a,s,d;for(s=t.dest.sortableScope.modelValue,d=[],o=r=0,a=s.length;r<a;o=++r)n=s[o],i={id:n.id,position:o},d.push(l.restangularizeElement(e.model,i,"fields").put());return d}},l.all("resources").getList().then(function(t){return e.templatable_types=t}),l.all("users").customGET("kms_user").then(function(t){return e.currentUser=t,e.currentUser.admin="admin"===e.currentUser.role}),e.field={},e.$watch("field.name",function(t){if(null!=t&&!e.field.id)return e.field.liquor_name=_.snakeCase(i.translit(t,5).replace(/`/g,""))}),e.formatType=function(t){var l;return l=_.find(e.types,function(e){return e.id===t.type}),e.isAssociationField(t)?l.name+" ("+e.getDisplayableTemplatableType(t)+")":l.name},e.getDisplayableTemplatableType=function(t){var l;return l=_.find(e.templatable_types,function(e){return e.type===t.class_name}),l.title},e.isAssociationField=function(e){return"Kms::HasManyField"===e.type||"Kms::BelongsToField"===e.type},e.addField=function(){if(e.field.name&&e.field.type)return e.model.fields_attributes.push(e.field),e.field={}},e.removeField=function(e){return e._destroy="1"}},angular.module("KMS").controller("FieldsController",["$scope","$state","Restangular","$stateParams","TransliterationService",e])}.call(this),function(){var e;e=function(e,t,l,n,i,r,o){return e.store=l.all("models"),l.all("users").customGET("kms_user").then(function(t){return e.currentUser=t,e.currentUser.admin="admin"===e.currentUser.role}),e.store.getList().then(function(t){return e.models=t}),n.id?e.store.get(n.id).then(function(t){return e.model=t}):e.model={fields_attributes:[]},e.$watchCollection("model.fields_attributes",function(t,l){if(t&&t.length>0&&l&&0===l.length)return e.model.label_field=t[0].liquor_name}),e.$watch("model.kms_model_name",function(t){if(null!=t&&!e.model.id)return e.model.collection_name=_.snakeCase(o.translit(t,5).replace(/`/g,""))}),e.create=function(){return e.store.post(e.model).then(function(){return window.location.reload()},function(e){return i.error(r.prepareErrorsString(e.data.errors))})},e.update=function(){return e.model.put().then(function(){return t.go("models")},function(e){return i.error(r.prepareErrorsString(e.data.errors))})},e.destroy=function(e){if(confirm("Are you sure?"))return e.remove().then(function(){return window.location.reload()})}},angular.module("KMS").controller("ModelsController",["$scope","$state","Restangular","$stateParams","Alertify","ErrorsService","TransliterationService",e])}.call(this);